07/13/2025 11:12:37 - INFO - __main__ - ***** Running training *****
07/13/2025 11:12:37 - INFO - __main__ -   Num examples = 2976
07/13/2025 11:12:37 - INFO - __main__ -   Num Epochs = 20
07/13/2025 11:12:37 - INFO - __main__ -   Instantaneous batch size per device = 4
07/13/2025 11:12:37 - INFO - __main__ -   Total train batch size (w. parallel, distributed & accumulation) = 4
07/13/2025 11:12:37 - INFO - __main__ -   Gradient Accumulation steps = 1
07/13/2025 11:12:37 - INFO - __main__ -   Total optimization steps = 2000000
  0%|                                                                                                    | 0/2000000 [00:00<?, ?it/s]
model is:  DistributedDataParallel(
  (module): GPT(
    (transformer): ModuleDict(
      (wte): Embedding(1024, 1024)
      (wpe): Embedding(576, 1024)
      (drop): Dropout(p=0.0, inplace=False)
      (h): ModuleList(
        (0-7): 8 x Block(
          (ln_1): LayerNorm()
          (attn): CausalSelfAttention(
            (c_attn): Linear(in_features=1024, out_features=3072, bias=False)
            (c_proj): Linear(in_features=1024, out_features=1024, bias=False)
            (attn_dropout): Dropout(p=0.0, inplace=False)
            (resid_dropout): Dropout(p=0.0, inplace=False)
          )
          (ln_2): LayerNorm()
          (mlp): MLP(
            (c_fc): Linear(in_features=1024, out_features=4096, bias=False)
            (gelu): GELU(approximate='none')
            (c_proj): Linear(in_features=4096, out_features=1024, bias=False)
            (dropout): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (ln_f): LayerNorm()
    )
    (lm_head): Linear(in_features=1024, out_features=1024, bias=False)
  )
)
Number of parameters in the model: 102319104
special token False
h shape torch.Size([36, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([4, 576])
labels shape inside tokenizer torch.Size([4, 576])
validation:   3%|██▌                                                                                 | 3/100 [00:02<01:03,  1.52it/s]
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
gen kwargs:  {'do_sample': True, 'temperature': 0.4, 'top_k': 70, 'max_new_tokens': 384}
repeat iters 1
iter number 0
gen input shape is torch.Size([8, 192])
generated tokens shape in each generate iter is:  torch.Size([8, 576])
results shape is  torch.Size([8, 576])
largest token in generated tokens  tensor(1022, device='cuda:0')
indices shape torch.Size([8, 576])
future length 6
largest index inside detokenize is  tensor(1022, device='cuda:0')
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
gen kwargs:  {'do_sample': True, 'temperature': 0.4, 'top_k': 70, 'max_new_tokens': 384}
repeat iters 1
iter number 0
gen input shape is torch.Size([8, 192])
generated tokens shape in each generate iter is:  torch.Size([8, 576])
results shape is  torch.Size([8, 576])
largest token in generated tokens  tensor(1022, device='cuda:0')
indices shape torch.Size([8, 576])
future length 6
largest index inside detokenize is  tensor(1022, device='cuda:0')
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
gen kwargs:  {'do_sample': True, 'temperature': 0.4, 'top_k': 70, 'max_new_tokens': 384}
repeat iters 1
iter number 0
gen input shape is torch.Size([8, 192])
generated tokens shape in each generate iter is:  torch.Size([8, 576])
results shape is  torch.Size([8, 576])
largest token in generated tokens  tensor(1022, device='cuda:0')
indices shape torch.Size([8, 576])
future length 6
largest index inside detokenize is  tensor(1022, device='cuda:0')
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
special token False
h shape torch.Size([72, 128, 8, 8])
entered no special token block
indices shape inside tokenizer torch.Size([8, 576])
labels shape inside tokenizer torch.Size([8, 576])
gen kwargs:  {'do_sample': True, 'temperature': 0.4, 'top_k': 70, 'max_new_tokens': 384}
repeat iters 1
iter number 0
gen input shape is torch.Size([8, 192])
generated tokens shape in each generate iter is:  torch.Size([8, 576])
results shape is  torch.Size([8, 576])
largest token in generated tokens  tensor(1022, device='cuda:0')
indices shape torch.Size([8, 576])
future length 6
largest index inside detokenize is  tensor(1022, device='cuda:0')
    start_train()
  File "/gpfs/home1/cmeo/Varun/ivideogpt/train_gpt.py", line 863, in start_train
    evaluate(args, accelerator, tokenizer, model, eval_dataloader, completed_steps)
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/gpfs/home1/cmeo/Varun/ivideogpt/train_gpt.py", line 345, in evaluate
    for i, batch in enumerate(eval_dataloader):
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/site-packages/accelerate/data_loader.py", line 563, in __iter__
    next_batch = next(dataloader_iter)
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 631, in __next__
    data = self._next_data()
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1329, in _next_data
    idx, data = self._get_data()
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1295, in _get_data
    success, data = self._try_get_data()
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1133, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/multiprocessing/queues.py", line 113, in get
    if not self._poll(timeout):
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/multiprocessing/connection.py", line 257, in poll
    return self._poll(timeout)
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/multiprocessing/connection.py", line 424, in _poll
    r = wait([self], timeout)
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/multiprocessing/connection.py", line 931, in wait
    ready = selector.select(timeout)
  File "/home/cmeo/.conda/envs/blockgpt/lib/python3.9/selectors.py", line 416, in select
    fd_event_list = self._selector.poll(timeout)
KeyboardInterrupt
